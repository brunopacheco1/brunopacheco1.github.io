<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Bruno Pacheco</title>
    <link>https://brunopacheco1.github.io/posts/</link>
    <description>Recent content in Posts on Bruno Pacheco</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 05 Feb 2023 03:07:00 +0100</lastBuildDate><atom:link href="https://brunopacheco1.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>The secret of long-lasting code</title>
      <link>https://brunopacheco1.github.io/posts/the-secret-of-long-lasting-code/</link>
      <pubDate>Sun, 05 Feb 2023 03:07:00 +0100</pubDate>
      
      <guid>https://brunopacheco1.github.io/posts/the-secret-of-long-lasting-code/</guid>
      <description>I cannot talk about every software developer in the world, but I imagine that most of us had to deal with legacy applications at some point in our careers.
But, before diving into it, we should find a definition of legacy software, and Gartner says:
An information system that may be based on outdated technologies, but is critical to day-to-day operations. Replacing legacy applications and systems with systems based on new and different technologies is one of the information systems (IS) professionals’ most significant challenges.</description>
    </item>
    
    <item>
      <title>Optimizing Decision Making with a Trie Tree-Based Rules Engine: An Experience Report</title>
      <link>https://brunopacheco1.github.io/posts/optimizing-decision-making-with-trie-tree/</link>
      <pubDate>Tue, 24 Jan 2023 02:11:00 +0100</pubDate>
      
      <guid>https://brunopacheco1.github.io/posts/optimizing-decision-making-with-trie-tree/</guid>
      <description>In Pictet Technologies, my team relies a lot on decision models. These models allow our business analysts to input Compliance business rules directly into the systems with minimal developer intervention. When I joined the company, we used to use both Drools and Camunda. However, we faced severe memory and performance issues, specifically with Camunda, prompting me to explore alternatives.
For those not familiar with these solutions, both are rules engine providers.</description>
    </item>
    
    <item>
      <title>Staying Sharp in Software Engineering</title>
      <link>https://brunopacheco1.github.io/posts/staying-sharp-in-software-engineering/</link>
      <pubDate>Sat, 07 Jan 2023 22:00:00 +0100</pubDate>
      
      <guid>https://brunopacheco1.github.io/posts/staying-sharp-in-software-engineering/</guid>
      <description>When it comes to working, learning is often a key concern. That is especially true in software engineering, where there is always a way to do something faster, cheaper, or better, which often requires new technologies. In this field, it is also crucial to ensure high-quality code. That includes not only coding, but also dependency management, testing, code review, continuous integration and deployment, tracing, monitoring, and measuring.
Fortunately, most of those tasks can be automated, allowing developers to focus on the actual coding.</description>
    </item>
    
    <item>
      <title>Covid led me to my first open-source contribution</title>
      <link>https://brunopacheco1.github.io/posts/covid-led-me-to-my-first-opensource-contribution/</link>
      <pubDate>Wed, 04 Jan 2023 00:34:00 +0100</pubDate>
      
      <guid>https://brunopacheco1.github.io/posts/covid-led-me-to-my-first-opensource-contribution/</guid>
      <description>It&amp;rsquo;s been a while since I&amp;rsquo;ve shared anything here. Mostly because my interests and priorities have changed. But now I&amp;rsquo;m back, and I hope to produce more content.
Let&amp;rsquo;s go back to 2020, when I stopped writing. The Covid era, baby!
There were people going crazy because they couldn&amp;rsquo;t see other people. There were people baking bread and brewing beer at home. And I was becoming a first-time parent, or at least starting the journey.</description>
    </item>
    
    <item>
      <title>How I failed using Google Cloud Functions</title>
      <link>https://brunopacheco1.github.io/posts/how-i-failed-using-gcloud-functions/</link>
      <pubDate>Wed, 12 Feb 2020 20:37:41 +0100</pubDate>
      
      <guid>https://brunopacheco1.github.io/posts/how-i-failed-using-gcloud-functions/</guid>
      <description>This post is a follow-up to my previous article about Quarkus, Kotlin and GraalVM.
I was proud to have finished the Snake game, which was working in multiplayer mode. However, I wanted to improve the gaming experience by addressing two areas: the interface and scalability. I decided to focus on scalability, but unfortunately, I failed.
I have used Google Cloud Functions, Firebase, Firestore and Google Pub/Sub.
Motivation In the original project, I used VertX for in-memory PubSub to manage the game events.</description>
    </item>
    
    <item>
      <title>Pitch my team</title>
      <link>https://brunopacheco1.github.io/posts/pitch-my-team/</link>
      <pubDate>Sat, 23 Nov 2019 08:02:28 +0100</pubDate>
      
      <guid>https://brunopacheco1.github.io/posts/pitch-my-team/</guid>
      <description>Yesterday we had the &amp;ldquo;Pitch my team!&amp;rdquo; in Pictet Technologies, where we had 5 minutes to share what we&amp;rsquo;ve been doing in 2019. I wasn&amp;rsquo;t excited about it when they asked us to do it, you know, me going to a stage, grabbing a mic a say something to hundred people.
But then Misi (our team lead) had a brilliant idea of recording a video using Prezi Video. With it, you can overlay the video camera output with the slides, allowing you to interact with the slides.</description>
    </item>
    
    <item>
      <title>Quarkus, Kotlin and GraalVM</title>
      <link>https://brunopacheco1.github.io/posts/quarkus-kotlin-and-graalvm/</link>
      <pubDate>Mon, 18 Nov 2019 22:05:30 +0100</pubDate>
      
      <guid>https://brunopacheco1.github.io/posts/quarkus-kotlin-and-graalvm/</guid>
      <description>During a chat with László, I&amp;rsquo;ve asked him for some ideas to practice Quarkus and GraalVM, he suggested to code the classic game Snake (AKA Worms by me :P).
Motivations Why Quarkus? I&amp;rsquo;ve read an article saying that Quarkus is a great and promising solution for Java in the Cloud, as it drastically reduces the application&amp;rsquo;s footprint and has an insanely fast startup when running on native code.
GraalVM is a general-purpose VM for running applications written in a bunch of different languages, allowing a polyglot code.</description>
    </item>
    
    <item>
      <title>The First Post</title>
      <link>https://brunopacheco1.github.io/posts/the-first-post/</link>
      <pubDate>Mon, 28 Oct 2019 22:38:36 +0200</pubDate>
      
      <guid>https://brunopacheco1.github.io/posts/the-first-post/</guid>
      <description>This is the first post in my personal blog. XD
Finally! It&amp;rsquo;s been more than 10 years since I started working as a developer and no sharing. I think I am a bit late, but better now than never, right?
So, the idea here is just sharing my experiments with libs, languages, tools, Operating Systems, etc. Summing up, anything I think it may worth to share.
Especial thanks to László for pushing me to do that and showing this great tool, Hugo!</description>
    </item>
    
  </channel>
</rss>
